<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Win10下MySQL5.7和MySQL8.0.31共存</title>
      <link href="/posts/46097/"/>
      <url>/posts/46097/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p><strong>由于平时使用的数据库是 MySQL5，目前大部分公司使用的也是 MySQL5，但是最近开发的项目需要使用 MySQL8，所以准备安装两个版本的数据库，一个工作使用，一个了解前沿技术。</strong></p><h4 id="一、前置工作："><a href="#一、前置工作：" class="headerlink" title="一、前置工作："></a>一、前置工作：</h4><p>备份原有数据库（<a href="http://c.biancheng.net/view/7373.html">MySQL mysqldump 备份数据库</a>）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p --all-databases &gt; D:\bak20221121.sql</span><br></pre></td></tr></table></figure><p>下载 MySQL 安装包（<a href="https://dev.mysql.com/downloads/">链接</a>）<br><img src="http://copic.imcoo.top/bg/FkAJ5mZvauipfLy-jzJKMtxXLnJz.png"><br>解压到对应目录<br><img src="http://copic.imcoo.top/bg/FoGOrtCQET74MtydfEBrAAGLdEBD.png"></p><h4 id="二、彻底卸载-Mysql5-6"><a href="#二、彻底卸载-Mysql5-6" class="headerlink" title="二、彻底卸载 Mysql5.6"></a>二、彻底卸载 Mysql5.6</h4><p><strong>第一步：停止服务及删除服务</strong><br><strong>停止 MySQL 服务</strong>，Cmd 管理员模式下输入<br><code>net stop mysql;</code><br><strong>检查服务</strong><br><code>Win+R </code>输入<code>services.msc</code> 找到 Mysql 服务，停止服务<br>并将 “-“服务”-“MySQL, 把 “正在运行” 改成 “停止” 或者 “禁用”<br><strong>删除服务，</strong>Cmd 管理员模式中输入命令<br><code>sc delete mysql </code><br>**第二步：清除安装本地安装文件 **<br>使用<code>RevoAppBar64</code>卸载 MySQL5.6<br>使用<code>Everything</code>寻找 MySQL 文件夹<br>找到 MySQL 的安装路径，把和 MySQl 有关的文件全部删除。<br>如果安装在 C 盘，注意检查一下 C:\Program Files (x86)和 C:\Program Files 这两个文件夹。<br><img src="http://copic.imcoo.top/bg/FqnGGvnq9nwouZ_-t35SPaUJgfim.png"><br><strong>第三步：清理注册表：完全卸载完毕</strong><br>删除关于 MySQl 的注册表。<br>在运行框内输入”regedit”,点击确定，会弹出注册表。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Eventlog\Application\MySQL</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\Eventlog\Application\MySQL</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\MySQL</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MySQL</span><br></pre></td></tr></table></figure><p>还有就是 F3 或 Ctrl+F 打开查找框，输入 MySQL，注意焦点放在计算机上<br>还有重要的一步删除 Connector Net XXX 注册表，大家失败的原因好多也是在这个注册表上面<br><strong>第四步：将该路径（C:\ProgramData\MySQL）粘贴到文件资源管理器地址栏中，删除此文件夹下的所有内容。</strong></p><p>注：如果删除文件时删除不了，检查是否还有有关 MySQL 的程序在运行，到任务管理器中去找，然后结束任务。</p><h4 id="三、安装-MySQL5-7-和-MySQL8-0-31"><a href="#三、安装-MySQL5-7-和-MySQL8-0-31" class="headerlink" title="三、安装 MySQL5.7 和 MySQL8.0.31"></a>三、安装 MySQL5.7 和 MySQL8.0.31</h4><p><strong>配置环境变量</strong><br>** 添加系统变量**<br><code>MYSQL5_HOME</code><br><code>MYSQL8_HOME</code><br><img src="http://copic.imcoo.top/bg/Fl40quK5cLjLIfuWgUSwrfzurUG5.png"><br>然后在 Path 中，添加各自的 bin<br><code>%MYSQL5_HOME%\bin</code><br><code>%MYSQL8_HOME%\bin</code><br><img src="http://copic.imcoo.top/bg/FlqbCq6UOcP51DAXOAWbjWpDhk6q.png"></p><h5 id="安装配置-MySQL5"><a href="#安装配置-MySQL5" class="headerlink" title="安装配置 MySQL5"></a>安装配置 MySQL5</h5><ol><li>进入到 mysql5 的安装目录下创建必要文件 <code>my.ini</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置mysql客户端默认字符集</span></span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置3305端口</span></span><br><span class="line">port = 3305</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置mysql的安装目录</span></span><br><span class="line">basedir=D:\\Software\\Code\\Mysql\\mysql-5.7.40</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置mysql数据库的数据的存放目录（自动生成，不然可能报错）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">允许最大连接数</span></span><br><span class="line">max_connections=200</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">允许最大连接人数</span></span><br><span class="line">max_user_connections=20</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建新表时将使用的默认存储引擎</span></span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">explicit_defaults_for_timestamp=true</span><br></pre></td></tr></table></figure><ol start="2"><li>进入 mysql5 的父目录（以管理员启动 cmd）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:</span><br><span class="line"></span><br><span class="line">cd  D:\Software\Code\Mysql</span><br></pre></td></tr></table></figure><p>3.执行 mysql 初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql-5.7.40\bin\mysqld --install MYSQL5 --defaults-file=D:\Software\Code\Mysql\mysql-5.7.40\my.ini</span><br></pre></td></tr></table></figure><p>初始化 Mysql：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql-5.7.40\bin\mysqld --initialize --console</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：窗口会显示<strong>默认密码</strong>记得将其<strong>记录下来</strong> 4. 启动 mysql8</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start MYSQL8</span><br></pre></td></tr></table></figure><ol start="5"><li>登录 mysql5 并修改密码</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -P 3305 -h localhost -p</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><p><strong>刷新权限</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges ;</span><br></pre></td></tr></table></figure><h5 id="安装配置-MySQL8"><a href="#安装配置-MySQL8" class="headerlink" title="安装配置 MySQL8"></a>安装配置 MySQL8</h5><ol><li>进入到 mysql8 的安装目录下创建必要文件 <code>my.ini</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置mysql客户端默认字符集</span></span><br><span class="line">port = 3308</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置3308端口</span></span><br><span class="line">port = 3308</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置mysql的安装目录</span></span><br><span class="line">basedir=D:\\Software\\Code\\Mysql\\mysql-8.0.31</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">允许最大连接数</span></span><br><span class="line">max_connections=200</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">允许最大连接人数</span></span><br><span class="line">max_user_connections=20</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建新表时将使用的默认存储引擎</span></span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">忘记密码时使用下面的命令</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">skip-grant-tables</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设置协议认证方式</span></span><br><span class="line">authentication_policy=mysql_native_password</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure><ol start="2"><li>进入 mysql8 的父目录（以管理员启动 cmd）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:</span><br><span class="line"></span><br><span class="line">cd  D:\Software\Code\Mysql</span><br></pre></td></tr></table></figure><p>3.执行 mysql 初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql-8.0.31\bin\mysqld --install MYSQL8 --defaults-file=D:\Software\Code\Mysql\mysql-8.0.31\my.ini</span><br></pre></td></tr></table></figure><p>初始化 Mysql：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql-8.0.31\bin\mysqld --initialize --console</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：窗口会显示<strong>默认密码</strong>记得将其<strong>记录下来</strong> 4. 修改注册表（最重要的一步）<br>Win+R 运行 <code>regedit</code><br>找到<code>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\MYSQL8</code>的<code>imagePath</code><br>修改为<code>MYSQL8</code>的路径：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Software\Code\Mysql\mysql-8.0.31\bin\mysqld --defaults-file=D:\Software\Code\Mysql\mysql-8.0.31\my.ini MYSQL8</span><br></pre></td></tr></table></figure><ol start="5"><li>启动 mysql8</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start MYSQL8</span><br></pre></td></tr></table></figure><ol start="6"><li>登录 mysql8 并修改密码<br>登录 MySQL8</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -P 3308 -h localhost -p</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><p>刷新权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges ;</span><br></pre></td></tr></table></figure><h4 id="四、常见问题"><a href="#四、常见问题" class="headerlink" title="四、常见问题"></a>四、常见问题</h4><p>1.net start mysql 发生系统错误<br>先切到 mysql 的 bin 目录的根路径，下面以我的路径为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:</span><br><span class="line"></span><br><span class="line">cd  D:\Software\Code\Mysql\mysql-8.0.31\bin</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先把 mysql 删除：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --remove</span><br></pre></td></tr></table></figure><p>再重新安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --install</span><br></pre></td></tr></table></figure><p>最后再启动：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure><p>成功启动！ 2.如何忘记密码进行修改 mysql 密码<br>对于<strong>5.7</strong>版本： 1.在命令行输入 <code>net stop mysql </code>关闭当前运行的 mysql。</p><p>2.切换到 MySQL 安装路径下：D:\Enviroment\MySQL-5.7.19\bin；如果已经配了环境变量，可以不用切换了。<br>命令行输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -nt --skip-grant-tables</span><br></pre></td></tr></table></figure><p>这时这个 cmd 窗口会卡住</p><p>3.重新打开一个 cmd，用管理员打开，输入 mysql -uroot -p;如果提示密码直接回车就进去了</p><p>4.修改密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>对于 mysql8.0 以上的有几点不一样的地方：</p><p>1.将第 2 步的，命令行改为：mysqld –console –skip-grant-tables –shared-memory 这时这个 cmd 窗口会卡住;</p><p>2.然后重启一个 CMD 窗口，输入<code>mysql -uroot -p</code>，按空格直接进入，不用输入密码。<br>然后输入指令：</p><p>3.再输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges ;</span><br></pre></td></tr></table></figure><p>4.修改密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><p>对于本机已经有 mysql5.7 了但 Mysql8 失败的原因<br>原因：我在网上找了很多博客，最后终于在修改注册表那里发现了为什么再输入初始密码哪里总是报 ERROR；原因是我们 initial 的时候，data 文件的路径是指向 mysql5.7 的，因此我们需要将注册表路径换了</p><h4 id="五、参考"><a href="#五、参考" class="headerlink" title="五、参考"></a>五、参考</h4><p><a href="https://blog.csdn.net/zemuerqi/article/details/107329378">Win10 下 mysql5.5 和 mysql8.0.20 共存</a><br><a href="https://blog.csdn.net/qq_32793985/article/details/105807328">Win 下同时安装 MySQL5 和 MySQL8 并存</a><br><a href="https://blog.csdn.net/weixin_42109012/article/details/94443391">Windows10 中同时安装 MySQL5 和 MySQL8</a><br><a href="https://blog.csdn.net/weixin_59823583/article/details/127149563?app_version=5.10.0&code=app_1562916241&csdn_share_tail=%7B%22type%22:%22blog%22,%22rType%22:%22article%22,%22rId%22:%22127149563%22,%22source%22:%22Lock_0i%22%7D&uLinkId=usr1mkqgl919blen&utm_source=app">Windows 下同时安装 Mysql5.7 和 Mysql8.28 版本的最详细配置</a><br><a href="https://blog.csdn.net/m0_65252697/article/details/124424292?utm_medium=distribute.wap_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-124424292-blog-125916332.wap_relevant_featuresortv7&spm=1001.2101.3001.4242.1">多版本 MySQL 的同时安装及配置</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【问题解决】从100 0000个数中找出所有的素数</title>
      <link href="/posts/16004/"/>
      <url>/posts/16004/</url>
      
        <content type="html"><![CDATA[<p>最初的版本（22.11.21）<br>想法就是最简单的遍历 100 0000 次，里面加个 if 判断<br>但是这种办法过于简单，没有考虑时间复杂度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrimaryNum</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> res[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1000000</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">1000000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">                res[i]=i;</span><br><span class="line">                System.out.print(res[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后面考虑使用 Hashmap</p>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 素数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Npm运行本地html及部署至宝塔</title>
      <link href="/posts/11142/"/>
      <url>/posts/11142/</url>
      
        <content type="html"><![CDATA[<p>Npm 运行本地 html 及部署至宝塔记录</p><span id="more"></span><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm init</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">npm i live-server --save-dev</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更换成淘宝的源</span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">– 配置后可通过下面方式来验证是否成功</span></span><br><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;dev&quot;: &quot;live-server&quot;,</span><br><span class="line"></span><br><span class="line">&quot;dev&quot;: &quot;./node_modules/.bin/live-server --port=50488&quot;,</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start --name pacman npm -- run dev</span><br></pre></td></tr></table></figure><h2 id="pm2-后台运行"><a href="#pm2-后台运行" class="headerlink" title="pm2 后台运行"></a>pm2 后台运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pm2</span><br></pre></td></tr></table></figure><p>关闭项目<br>先查找 ID</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 status</span><br></pre></td></tr></table></figure><p>然后，停止相应项目的 id</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 stop id</span><br></pre></td></tr></table></figure><p>pm2 删除项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 delete  id</span><br></pre></td></tr></table></figure><h2 id="Pm2-部署"><a href="#Pm2-部署" class="headerlink" title="Pm2 部署"></a>Pm2 部署</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pm2 start --name pacman npm -- run dev</span><br><span class="line"></span><br><span class="line">pm2 save</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="部署-vue-项目"><a href="#部署-vue-项目" class="headerlink" title="部署 vue 项目"></a>部署 vue 项目</h2><p>先将前端 Vue 项目打包生成<code>dist</code>文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>服务器安装环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir</span><br><span class="line"></span><br><span class="line">cd demo-vue</span><br></pre></td></tr></table></figure><p>初始化包管理配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装 express (可以通过 express 快速创建 web 服务器)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i express -S</span><br></pre></td></tr></table></figure><p>开启 gzip 配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i compression -S</span><br></pre></td></tr></table></figure><p>进入 dist 文件夹内 创建配置启动文件,在 dist 生产发布包根目录下，创建启动文件 index.js(文件名可自定义)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd dist/</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">const express = require(&#x27;express&#x27;)</span><br><span class="line">const compression = require(&quot;compression&quot;) //gzip包</span><br><span class="line">const fs = require(&#x27;fs&#x27;)</span><br><span class="line"></span><br><span class="line">const app = express()</span><br><span class="line">app.use(compression()) // 启用gzip代码压缩</span><br><span class="line">app.use(express.static(&#x27;./&#x27;)) //托管静态资源</span><br><span class="line">app.get(&#x27;/*&#x27;, function(req, res) &#123;</span><br><span class="line">  const html = fs.readFileSync(&#x27;./index.html&#x27;, &#x27;utf-8&#x27;)</span><br><span class="line">  res.send(html)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">//启动应用，端口为8081</span><br><span class="line">app.listen(8081)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>在 dist 目录下启动项目</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd dist/</span><br></pre></td></tr></table></figure><p>生成配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pm2 init simple</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>ecosystem.config.js</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  apps : [&#123;</span><br><span class="line">    name   : &quot;app1&quot;,</span><br><span class="line">    script : &quot;./app.js&quot;</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ecosystem.config.js</span><br></pre></td></tr></table></figure><p>启动项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pm2 start</span><br><span class="line">pm2 save</span><br><span class="line">pm2 list</span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://blog.csdn.net/sunddy_x/article/details/125279277">宝塔部署 nodejs 项目</a><br><a href="https://blog.csdn.net/printf_hello/article/details/115485006">PM2 部署,关闭, 删除，日志</a><br><a href="https://blog.csdn.net/qq_42411307/article/details/119351634">使用 pm2+express 部署 vue 项目</a><br><a href="https://www.cxyax.com/?post=325">如何使用 pm2 部署 vue 项目暨 vue 打包教程</a><br><a href="https://www.jianshu.com/p/4239b2fb21b4">使用 pm2 部署 vue(node)项目</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔 </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语雀图片防盗链的解决方案</title>
      <link href="/posts/51678/"/>
      <url>/posts/51678/</url>
      
        <content type="html"><![CDATA[<p>语雀图片防盗链的解决记录</p><span id="more"></span><p>在使用<a href="https://github.com/x-cold/yuque-hexo">yuque-hexo</a>同步文章到博客后，由于语雀的图片由有防盗链的限制，会导致部署后，博客网站显示图片异常。<br>有两种处理办法：</p><h2 id="1-使用-markdown-格式的图片链接"><a href="#1-使用-markdown-格式的图片链接" class="headerlink" title="1.使用 markdown 格式的图片链接"></a>1.使用 markdown 格式的图片链接</h2><p>在语雀上使用图片的时候，避开直接复制图片到语雀。先将图片上传到自己的图床后，直接使用 markdown 的图片语法：<br><img src="http://copic.imcoo.top/bg/FopKLQC1gVmT3Nc_JDVE-rtpIPjY.png"></p><h2 id="2-在插件yuque-hexo中进行图床配置"><a href="#2-在插件yuque-hexo中进行图床配置" class="headerlink" title="2.在插件yuque-hexo中进行图床配置"></a>2.在插件<a href="https://github.com/x-cold/yuque-hexo">yuque-hexo</a>中进行图床配置</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i -g yuque-hexo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">or</span></span><br><span class="line">npm i --save-dev yuque-hexo</span><br></pre></td></tr></table></figure><h4 id="在-package-json-中更改配置"><a href="#在-package-json-中更改配置" class="headerlink" title="在 package.json 中更改配置"></a>在 package.json 中更改配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&quot;yuqueConfig&quot;: &#123;</span><br><span class="line">    &quot;postPath&quot;: &quot;source/_posts/yuque&quot;,</span><br><span class="line">    &quot;cachePath&quot;: &quot;yuque.json&quot;,</span><br><span class="line">    &quot;mdNameFormat&quot;: &quot;title&quot;,</span><br><span class="line">    &quot;adapter&quot;: &quot;hexo&quot;,</span><br><span class="line">    &quot;concurrency&quot;: 5,</span><br><span class="line">    &quot;baseUrl&quot;: &quot;https://www.yuque.com/api/v2&quot;,</span><br><span class="line">    &quot;login&quot;: &quot;yinzhi&quot;,</span><br><span class="line">    &quot;repo&quot;: &quot;blog&quot;,</span><br><span class="line">    &quot;onlyPublished&quot;: false,</span><br><span class="line">    &quot;onlyPublic&quot;: false,</span><br><span class="line">    &quot;lastGeneratePath&quot;: &quot;lastGeneratePath.log&quot;,</span><br><span class="line">    &quot;imgCdn&quot;: &#123;</span><br><span class="line">      &quot;enabled&quot;: false,</span><br><span class="line">      &quot;concurrency&quot;: 0,</span><br><span class="line">      &quot;imageBed&quot;: &quot;qiniu&quot;,</span><br><span class="line">      &quot;host&quot;: &quot;&quot;,</span><br><span class="line">      &quot;bucket&quot;: &quot;&quot;,</span><br><span class="line">      &quot;region&quot;: &quot;&quot;,</span><br><span class="line">      &quot;prefixKey&quot;: &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>imgCdn 是语雀图片转图床配置说明</p><table><thead><tr><th><strong>参数名</strong></th><th><strong>含义</strong></th><th><strong>默认值</strong></th></tr></thead><tbody><tr><td>enabled</td><td>是否开启</td><td>false</td></tr><tr><td>concurrency</td><td>上传图片并发数, 0 代表无限制，使用 github 图床时，并发问题严重，建议设置为 1</td><td>0</td></tr><tr><td>imageBed</td><td>选择将图片上传的图床</td><td></td></tr></tbody></table><p>目前支持腾讯云(cos)、阿里云(oss)和七牛云(qiniu)，又拍云(upyun)，Github 图床(github)<br>默认使用七牛云 | ‘qiniu’ |<br>| host | 使用七牛云&#x2F;又拍云图床时，需要指定 CDN 域名前缀 | |<br>| bucket | 图床的 bucket 名称 | - |<br>| region | 图床的的 region | - |<br>| prefixKey | 文件前缀 | - |</p>]]></content>
      
      
      <categories>
          
          <category> 语雀 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语雀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10安装WSL2</title>
      <link href="/posts/24047/"/>
      <url>/posts/24047/</url>
      
        <content type="html"><![CDATA[<p>Windows10 安装 WSL2 的一些记录</p><span id="more"></span><h3 id="1-查看本机-windows-版本"><a href="#1-查看本机-windows-版本" class="headerlink" title="1.查看本机 windows 版本"></a>1.查看本机 windows 版本</h3><p>键盘上按下 win+R,输入 winver，查看系统版本。必须运行 Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）或 Windows 11。满足版本要求后，继续下一步。</p><h3 id="2-BIOS-及控制面板开启虚拟化"><a href="#2-BIOS-及控制面板开启虚拟化" class="headerlink" title="2.BIOS 及控制面板开启虚拟化"></a>2.BIOS 及控制面板开启虚拟化</h3><p>(1)BIOS 开启虚拟化<br>我用的是联想小新笔记本，开机时狂按 F2（Fn+F2）即可进入 BIOS 界面，找到在上方的【Cpu Configuration】选项，将最下方的【Intel Virtual Technology】，在 VirtuallizationTechnology 上按下回车键把 Disabled 改为 Enabled。AMD 则是将【SVM Support】设置为设置为【Enable】的状态；最后点击【F10】保存退出即可。<br>开机后打开【任务管理器——性能】检查 VT 功能是否成功开启<br><img src="http://copic.imcoo.top/bg/FuvDIL0pF7UrfoV618MaxZVs8df6.png"><br>(2)在 Windows 系统中开启虚拟化<br><img src="http://copic.imcoo.top/bg/Fhe3cynTmXGRN6_F1nPAVruTW62_.png"></p><h3 id="3-Powershell-中启用-Windows-子系统和虚拟机平台功能"><a href="#3-Powershell-中启用-Windows-子系统和虚拟机平台功能" class="headerlink" title="3.Powershell 中启用 Windows 子系统和虚拟机平台功能"></a>3.Powershell 中启用 Windows 子系统和虚拟机平台功能</h3><p>在 powerShell 中以管理员身份运行下面命令以确保开启<strong>适用于 Linux 的 Windows 子系统</strong>和<strong>虚拟机平台</strong>配置项。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wsl --install</span><br><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line"></span><br><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure><p>开启后重启<br>检查版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -l -v</span><br></pre></td></tr></table></figure><h3 id="4-下载安装包并安装"><a href="#4-下载安装包并安装" class="headerlink" title="4.下载安装包并安装"></a>4.下载安装包并安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WebRequest -Uri https://aka.ms/wsl-ubuntu-1804 -OutFile Ubuntu18.appx -UseBasicParsing</span><br><span class="line">Rename-Item .\Ubuntu_1804.2019.522.0_x64.appx Ubuntu18.appx</span><br><span class="line">Rename-Item .\Ubuntu18.appx Ubuntu18.zip</span><br><span class="line">Expand-Archive .\Ubuntu18.zip -Verbose</span><br><span class="line">cd Ubuntu18/</span><br><span class="line">.\ubuntu1804.exe</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Rename-Item .\Ubuntu_2004.2020.424.0_x64.appx Ubuntu20.appx</span><br><span class="line">Rename-Item .\Ubuntu20.appx Ubuntu20.zip</span><br><span class="line">Expand-Archive .\Ubuntu20.zip -Verbose</span><br><span class="line">cd Ubuntu20/</span><br><span class="line">.\ubuntu2004.exe</span><br></pre></td></tr></table></figure><h3 id="5-WSL-apt-换源"><a href="#5-WSL-apt-换源" class="headerlink" title="5.WSL apt 换源"></a>5.WSL apt 换源</h3><p>换源地址集合（<a href="https://zhuanlan.zhihu.com/p/161680238">开源软件国内镜像源对比</a>）<br>WSL2 换源系列问题（<a href="https://blog.csdn.net/weixin_47359411/article/details/123861792">https://blog.csdn.net/weixin_47359411&#x2F;article&#x2F;details&#x2F;123861792</a>）<br>(1).备份源列表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/apt/</span><br><span class="line"></span><br><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure><p>(2).命令行打开 sources.list 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>(3).将源文件内容全部注释,并添加以下任意源（优先清华源） #阿里云 #20221005 经测试 ubuntu18.04 速度只有 100 多 kb</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb https://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#清华源 #20221005 经测试 ubuntu18.04 报错但下方找到解决方案<br><a href="https://blog.csdn.net/Chaowanq/article/details/121559709">解决</a>：将&#x2F;etc&#x2F;resolv.conf 下的源本机为 WSL 设置的虚拟 ip 地址注释掉</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">预发布软件源，不建议启用</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure><p>20.04(http)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#中科大源（<a href="https://mirrors.ustc.edu.cn/repogen/">配置链接</a>）#20221005 经测试 ubuntu18.04 OK</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Not recommended</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure><p>(4).更新源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat sources.list</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>(5).更新软件，然后你就可以感受到更换国内源之后的飞速提升了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y dist-upgrade</span><br><span class="line">sudo apt-get -y upgrade</span><br></pre></td></tr></table></figure><p>(6).更换默认 vim<br><strong>卸载</strong><a href="https://so.csdn.net/so/search?q=vim&spm=1001.2101.3001.7020"><strong>vim</strong></a><strong>-tiny</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove vim-common</span><br></pre></td></tr></table></figure><p><strong>安装 vim-full</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim</span><br></pre></td></tr></table></figure><h3 id="6-开启宿主-Win10-文件系统相互访问"><a href="#6-开启宿主-Win10-文件系统相互访问" class="headerlink" title="6.开启宿主 Win10 文件系统相互访问"></a>6.开启宿主 Win10 文件系统相互访问</h3><p>(1).Win 系统访问 WSL2 文件<br>在资源管理器输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\wsl$</span><br></pre></td></tr></table></figure><p>(2).Linux 子系统访问 Win10 文件<br>在 WSL 内 进入 mnt 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/</span><br></pre></td></tr></table></figure><h3 id="7-解决-systemctl-命令无法使用问题"><a href="#7-解决-systemctl-命令无法使用问题" class="headerlink" title="7.解决 systemctl 命令无法使用问题"></a>7.解决 systemctl 命令无法使用问题</h3><p>1.安装<code>daemonize</code>和<code>fontconfig</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install -y fontconfig daemonize</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.编辑&#x2F;etc&#x2F;profile 脚本，加入如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SYSTEMD_PID=$(ps -ef | grep &#x27;/lib/systemd/systemd --system-unit=basic.target$&#x27; | grep -v unshare | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">if [ -z &quot;$SYSTEMD_PID&quot; ]; then</span><br><span class="line">   sudo /usr/bin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target</span><br><span class="line">   SYSTEMD_PID=$(ps -ef | grep &#x27;/lib/systemd/systemd --system-unit=basic.target$&#x27; | grep -v unshare | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ -n &quot;$SYSTEMD_PID&quot; ] &amp;&amp; [ &quot;$SYSTEMD_PID&quot; != &quot;1&quot; ]; then</span><br><span class="line">    exec sudo /usr/bin/nsenter -t $SYSTEMD_PID -a su - $LOGNAME</span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.修改&#x2F;etc&#x2F;sudoers 文件，加入如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">%</span><span class="language-bash">sudo ALL=(ALL) NOPASSWD: /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit=basic.target</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">sudo ALL=(ALL) NOPASSWD: /usr/bin/nsenter -t [0-9]* -a su - [a-zA-Z0-9]*</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.执行 source &#x2F;etc&#x2F;profile 或者是重新打开 terminal，执行 systemctl 验证是否能够正常操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/wsl.conf</span><br><span class="line"></span><br><span class="line">[network]</span><br><span class="line">generateHosts = false</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8-关闭-WSL2-进程"><a href="#8-关闭-WSL2-进程" class="headerlink" title="8.关闭 WSL2 进程"></a>8.关闭 WSL2 进程</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关闭虚拟机</span></span><br><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure><h3 id="9-对-WSL-内存进行限制"><a href="#9-对-WSL-内存进行限制" class="headerlink" title="9.对 WSL 内存进行限制"></a>9.对 WSL 内存进行限制</h3><p>输入 %UserProfile% 并打开 CMD<br>执行<code>code .wslconfig</code>并填入下列内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[wsl2]</span><br><span class="line">processors=8</span><br><span class="line">memory=8GB</span><br><span class="line">swap=8GB</span><br><span class="line">localhostForwarding=true</span><br></pre></td></tr></table></figure><p>安装配置参考：<a href="https://blog.csdn.net/RenLJ1895/article/details/122741040">https://blog.csdn.net/RenLJ1895/article/details/122741040</a><br>安装到其他盘参考：<a href="https://www.cnblogs.com/lidabo/p/16614014.html">https://www.cnblogs.com/lidabo/p/16614014.html</a><br>WSL2 内存限制参考：<a href="https://zhuanlan.zhihu.com/p/345645621">https://zhuanlan.zhihu.com/p/345645621</a></p>]]></content>
      
      
      <categories>
          
          <category> WSL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> WSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇Blog</title>
      <link href="/posts/2825081488/"/>
      <url>/posts/2825081488/</url>
      
        <content type="html"><![CDATA[<h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><p>因为最近在做一个 personal 的 demo，中间比较深地接触到了 Github&amp;Github page，在用 Github page 托管之后 demo 后，我开始花了整整一个下午的时间配置这个属于自己的 Hexo Bolg。<br>其实很早的时候，就想做一个自己的网页了。于是最近在接触到 Github page 之后，既然都用 Github page 托管了。何不做一个自己的 Blog 呢。</p><p>配置完之后，总体上，感觉还是不错的。但是有些功能还处在未完工阶段。等闲一些了再看下怎么搞定。</p><p>希望下一次能搞定更多的东西吧。</p>]]></content>
      
      
      <categories>
          
          <category> Blog学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
